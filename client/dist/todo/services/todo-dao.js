"use strict";var _createClass=function(){function defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")};(function(a){"use strict";a.module("hosonto").factory("TodoDAO",["$q","Todo","TodoResource",function(b,c,d){return new(function(){function _class(){_classCallCheck(this,_class)}return _createClass(_class,[{key:"getById",value:function getById(f){return a.isUndefined(f)?b.reject(new TypeError("Invalid id for search.")):d.get({id:f}).$promise.then(function(g){return new c(g)})}},{key:"getAll",value:function getAll(){return d.query().$promise.then(function(f){return f.map(function(g){return new c(g)})})}},{key:"createTodo",value:function createTodo(f){return a.isObject(f)&&f instanceof c&&f.isValid()?d.save(f).$promise.then(function(g){return new c(g)}):b.reject(new TypeError("Invalid todo to be created."))}},{key:"deleteTodo",value:function deleteTodo(f){return a.isString(f)?d.delete({id:f}).$promise:b.reject(new TypeError("Invalid id for deletion."))}}]),_class}())}])})(window.angular);